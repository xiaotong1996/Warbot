;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; auteur: CHEN xiaotong, XU Ruitong
;; le code de l'equipe rouge basique
;; préfixe : bilibili
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to red-team-ask-for-energy [ b n ]
  ask b [ if (energy > 6000) [ give-energy myself n ]]
end

to red-team-go-back-to-base
  if (carrying-food? > 1000) or (energy < 500) or ((Breed = RocketLaunchers) and (nb-missiles = 0))
  [
    let b min-one-of my-bases [ distance myself ]
    if (b != nobody) [
      ifelse (distance b <= 2)
      [ 
        if (carrying-food? > 1000) [ give-food b carrying-food? ]
        if (energy < 500) [ red-team-ask-for-energy b 500 ]
        if ((Breed = RocketLaunchers) and (nb-missiles = 0)) [
          red-team-ask-for-energy b 500
          new-missile 5
        ]
      ]
      [
        set heading towards b - 20 + random 40
        if count turtles in-cone 2 90 with [ (breed != Burgers) and (breed != Perceptions) ] != 1 [ rt random 90 ]
        ifelse (free-ahead? speed = nobody)  [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
      ]
    ]    
  ]
end

to red-team-go-and-eat
  if ((breed = RocketLaunchers and (mem5 = 0)) or (breed = Explorers)) [
    random-move
  ]
end

to red-team-harvesters-go-and-eat
  let b min-one-of perceive-food [ distance self ]
  ifelse (b != nobody) [ 
    ifelse (distance b) <= 2
      [ take-food b ]
      [ set heading towards b - 20 + random 40
        if count turtles in-cone 2 90 with [ (breed != Burgers) and (breed != Perceptions) ] != 1 [ rt random 90 ]
        ifelse (free-ahead? speed = nobody)  [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
      ]
  ]
  [ random-move ]
end

to-report red-team-no-target?
  report mem5 = 0
end

to red-team-set-target [ x y espece ]
  set mem0 x set mem1 y set mem2 espece set mem5 1
end

to red-team-call-rocket-launcher [ x y espece ]
  let rl min-one-of perceive-specific-robots color RocketLaunchers [ distancexy x y ]
  if (rl != nobody) [ ask rl [ red-team-set-target x y espece ]]
end

to red-team-call-explorer [ x y espece ]
  let ex one-of perceive-specific-robots color Explorers
  if (ex != nobody) [
    ask ex [
      set mem0 x 
      set mem1 y
      set mem2 espece
      set mem5 1
    ]
  ]
end

to red-team-select-target
  if (red-team-no-target?)
  [
    let h min-one-of perceive-robots ennemy [ distance myself ]
    ifelse ( h != nobody ) [
      set mem0 [xcor] of h
      set mem1 [ycor] of h
      set mem2 [breed] of h
      set mem5 1
    ]
    [ set mem5 0 ]
  ]
end

to red-team-shoot 
  if (not red-team-no-target?) 
  [
    ifelse (distancexy mem0 mem1 < detection-range)
    [ launch-rocket towardsxy mem0 mem1 set mem5 0]
    [ set heading towardsxy mem0 mem1 - 20 + random 40
      if count turtles in-cone 2 90 with [ (breed != Burgers) and (breed != Perceptions) ] != 1 [ rt random 90 ]
      ifelse (free-ahead? speed = nobody)  [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
    ]
  ]
  
end


to bilibili-go-to-base
   
    let b min-one-of my-bases [ distance myself ]
    if (b != nobody) [
     
        set heading towards b - 20 + random 40
        if count turtles in-cone 2 90 with [ (breed != Burgers) and (breed != Perceptions) ] != 1 [ rt random 90 ]
        ifelse (free-ahead? speed = nobody)  [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
    
    if(distance b <= 2 )
    [
      rt 180
      set mem5 3
    ]
    ]     
  
end

to bilibili-give-data  [agent c choice]
   
  if (agent != nobody) [
    (
      ifelse
      choice = 0[
        ask agent [ set mem0 c ]
      ]
      choice = 1[
        ask agent [ set mem1 c ]
      ]
      choice = 2[
        ask agent [ set mem2 c ]
      ]
      choice = 3[
        ask agent [ set mem3 c ]
      ]
      choice = 4[
        ask agent [ set mem4 c ]
      ]
      choice = 5[
        ask agent [ set mem5 c ]
      ]
      choice = 10
      [
        ask agent [ set mem10 c ]
      ]
      
    )

    
  ]
  
end

;; for calling harvest
to-report bilibili-no-target?
  report mem5 = 0
end

to bilibili-set-food-target [x y]
  if(bilibili-no-target?) [ set mem0 x set mem1 y set mem5 1 ] 
end

to bilibili-call-harvester [x y]
  let h min-one-of perceive-specific-robots color harvesters [ distancexy x y ]
  if (h != nobody) [ ask h [ bilibili-set-food-target x y ]]
  
end
  
to bilibili-harvesters-go-and-eat
  
  ifelse(bilibili-no-target?)
  [
    let b min-one-of perceive-food [ distance self ]
    ifelse (b != nobody) [ 
      ifelse (distance b) <= 2
      [ 
        take-food b 
        rt 180
      ]
      [ set heading towards b - 20 + random 40
        if count turtles in-cone 2 90 with [ (breed != Burgers) and (breed != Perceptions) ] != 1 [ rt random 90 ]
        ifelse (free-ahead? speed = nobody)  [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
      ]
    ]
    [ random-move ]
  ]
  [
    ifelse (mem5 = 1)
    [ 
      ifelse (distancexy mem0 mem1 > 1)
      [
        set heading towardsxy mem0 mem1
        ifelse (free-ahead? speed = nobody) [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
      ]
      [ set mem5 0 ]
    ]
    [
      random-move
    ]
  ]
  
end

to bilibili-go-help-harvest
  ifelse (distancexy mem0 mem1 > 1)
      [
        set heading towardsxy mem0 mem1
        ifelse (free-ahead? speed = nobody) [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
      ]
      [ set mem5 2 ]
  
end
  
;;TODO 改mem2
;; mem0
;; mem1
;; mem2 0 无 信息 1 知道一个信息 2 知道所有信息
;; mem3 x y of first enemy's base
;; mem4 x y of second enemy's base
;; mem5 0 free 2 回家路上 。1 向目标移动
to goRedExplorer
  ;;show mem5
  red-team-go-and-eat
  ;; if explorer is free now, we detect if there is enemy's base near it
  ;; if we find enemy's base we set     mem5  =  2 (enemy's base found)
  if(mem5 = 0 and mem2 != 2)
  [
    red-team-go-and-eat
    let b min-one-of perceive-base ennemy [ distance myself ]
    if(b != nobody)
    [
      let x [xcor] of b
      let y [ycor] of b
      let my-list (list x y)
      ifelse( mem3 = 0)
      [
        set mem3 my-list
        set mem2  1
        set mem5 2
      ]
      [
        if(mem3 != my-list)
        [
          set mem4 my-list
          set mem2 2
          set mem5 2
        ]

      ]
     
    ]
  ]
  
  ;; if this explorer find enemy's base, then go home tell our base
  if(mem5 = 2)
  [
    
    let a min-one-of perceive-base color   [ distance myself ]
    ifelse(a != nobody and distance a <= 2)
    [
      ifelse( mem4 = 0)
      [
        if( length mem3 != 0)
       [ 
          bilibili-give-data a mem3 3
          bilibili-give-data a 1 10
          set mem5 0
        ]
      ]
      [
        bilibili-give-data a mem4 4
        bilibili-give-data a 2 10
        set mem2 2
        set mem5 0
      ]
      
      rt 180
    ]
    [
      bilibili-go-to-base
    ]  
  ]
  
  if(mem5 = 1)
  [
    ;;show 1
    bilibili-go-help-harvest
    
  ]
  
  if(mem5 = 2)
  [
    ;;show 2
      ifelse(carrying-food? > 0)
       [ 
          ;;show 3
          bilibili-go-to-base
       ]
    [
      set mem5 0
    ]
  ]
  
  if(mem5 = 3)
  [
    ;;show 3
    let a min-one-of perceive-base color   [ distance myself ]
    if(a != nobody and distance a <= 2)
    [
      give-food a carrying-food? 
      rt 180
      set mem5 0
    ]
  ]

  
  
  ;; if no energy then go home
  if(energy < 100)
  [
    ;;TODO
    bilibili-go-to-base
    
    let a min-one-of perceive-base color   [ distance myself ]
    if(a != nobody and distance a <= 2)
    [
       red-team-ask-for-energy a 300 
       rt 180
    ]
  ]
  
  ;;if we find food we call Harvester
  let food one-of perceive-food
  if (food != nobody) [
    
    bilibili-call-harvester [xcor] of food [ycor] of food
  ]
  
  
  
  
end

;;
;;
;;
;;mem5 3 所有base信息都得知
to bilibili-go-to-enemy-base
  ifelse(mem3 != 0)[
    set heading towardsxy (item 0 mem3) (item 1 mem3) - 20 + random 40
    if count turtles in-cone 2 90 with [ (breed != Burgers) and (breed != Perceptions) ] != 1 [ rt random 90 ]
    ifelse (free-ahead? speed = nobody)  [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
  ][if(mem4 != 0)[
     set heading towardsxy (item 0 mem4) (item 1 mem4) - 20 + random 40
    if count turtles in-cone 2 90 with [ (breed != Burgers) and (breed != Perceptions) ] != 1 [ rt random 90 ]
    ifelse (free-ahead? speed = nobody)  [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
  ]]
    
end

;;mem5 3 所有base信息都得知
to goRedRocketLauncher
  if (energy < 1000) or (nb-missiles = 0)
  [
    ;; rentre à la base si certaines conditions sont vérifiées
    bilibili-go-to-base
    
    let a min-one-of perceive-base color   [ distance myself ]
    if(a != nobody and distance a <= 2)
    [
     
       red-team-ask-for-energy a 1000 
       new-missile 10
       rt 180
    ]
    
  ]

  ;  ifelse (carrying-food? > 1000) or (energy < 500) or ((Breed = RocketLaunchers) and (nb-missiles = 0))
  ifelse(mem4 != 0 or mem3 != 0)[
    bilibili-go-to-enemy-base
    
    ;; if any enemy near our base, we shoot a regular bullet
    let n one-of perceive-base ennemy
    if (n != nobody ) [
      ;;if (not any? perceive-robots-in-cone color towards n) [ 
       ;; show 11111111111 
        launch-rocket towardsxy ([xcor] of n)  ([ycor] of n)
      ;;]
    ]
    
    
    ;; if enemy's rocketlaunchers near our rocketlaunchers, we shoot a faf
    let t one-of perceive-specific-robots ennemy rocketlaunchers
    if (t != nobody) [
     
      ;; regarde s'il y a des robots amis en direction de la cible potentielle t avant de tirer
      
      ;;if (not any? perceive-robots-in-cone color towards t) [ 
        ;;show 11111111111 
        launch-faf t 
      ;;]
     
    ]
    
    ;; if any enemy near our base, we shoot a regular bullet
    let k one-of perceive-robots ennemy
    if (k != nobody ) [
      ;;if (not any? perceive-robots-in-cone color towards k) [ 
       
        launch-rocket towardsxy ([xcor] of k)  ([ycor] of k)
      ;;]
    ]
  ]
  [
    ;;random-move
    let t one-of perceive-specific-robots ennemy rocketlaunchers
    if (t != nobody) [
      ;; regarde s'il y a des robots amis en direction de la cible potentielle t avant de tirer
      if (not any? perceive-robots-in-cone color towards t) [ launch-faf t ]
    ]
    
    ;; if any enemy near our base, we shoot a regular bullet
    let k one-of perceive-robots ennemy
    if (k != nobody ) [
      if (not any? perceive-robots-in-cone color towards k) [ launch-rocket towardsxy ([xcor] of k)  ([ycor] of k)]
    ]
  ]
  
  if (nb-missiles < 5) and (energy > 3000) [ new-missile 1 ]
  if (nb-fafs = 0) and (energy > 3000) [ new-faf 1 ]
      
end



to bilibili-call-explorer-help
 
  let t min-one-of perceive-specific-robots color explorers [ distance myself ]
  ifelse(t != nobody)
  [
    
    if([mem5] of t = 0)
    [
      ask t [
        set mem0 xcor
        set mem1 ycor
        set mem5 1
      ]
    ]
    
    if(distance t <= 2)
    [
      show 0000
      give-food t (carrying-food? - 300)
      set mem5 4
      rt 180
    ]
  ]
  [
    set mem5 2
    bilibili-go-to-base
  ]
  
end
;; mem5 0  1 有目标 。3 到家 2 回家路上 4 种地 5 等待explor
to goRedHarvester

  
  (ifelse
  mem5 = 0
  [
      ;;bilibili-harvesters-go-and-eat
      let b min-one-of perceive-food [ distance self ]
      ifelse (b != nobody) [ 
      ifelse (distance b) <= 2
      [ 
        take-food b 
      ]
      [ set heading towards b - 20 + random 40
        if count turtles in-cone 2 90 with [ (breed != Burgers) and (breed != Perceptions) ] != 1 [ rt random 90 ]
        ifelse (free-ahead? speed = nobody) [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
      ]
    ]
    [ random-move ]
      if(carrying-food? > 500)
      [
        set mem5 5
        
      ]
  ]
  mem5 = 1
  [
      ifelse (distancexy mem0 mem1 > 2)
      [
        set heading towardsxy mem0 mem1
        ifelse (free-ahead? speed = nobody) [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
      ]
      [ set mem5 0 ]
  ]
     mem5 = 2
  [
      bilibili-go-to-base
  ]
    mem5 = 3
    [
      let b min-one-of my-bases [ distance myself ]
      if (b != nobody) [
        give-food b ( carrying-food? * 0.65 )
        set mem5 4    
      ]
    ]
  mem5 = 5 
    [
       bilibili-call-explorer-help
    ]
  mem5 = 4
  [ 
    ifelse (free-ahead? speed = nobody) [ forward-move speed ][ rt random 360 if (free-ahead? 2 = nobody) [ forward-move speed ]]
    plant-seeds color max-seeds
    if(carrying-food?  = 0)
    [
        set mem5  0
        ;;bilibili-go-to-base
    ]
  ])
 
   
end


;;
;; mem3  first cor of enemy's base
;; mem4  second cor of enemy's base
;; mem10  0 没有找到 1 找到一个存到mem3， 2 找到两个
;;
to goRedBase
  ;; update number of haverst explorers launchers, missile and rocket
  ifelse (mem6 > 0) [ new-Harvester self set mem6 mem6 - 1 ]
  [ ifelse (mem7 > 0) [ new-RocketLauncher self set mem7 mem7 - 1 ]
  [ if (mem8 > 0) [ new-Explorer self set mem8 mem8 - 1 ]]]
  
  if (nb-missiles < 10) and (energy > 1000) [ new-missile 40 ]
  if (nb-fafs < 10) and (energy > 1000) [ new-faf 10 ]
  
  if(energy > 15000)
  [
    if (random 100 = 21)[ set mem6 mem6 + 1 ]
    ;;if (mem8 = 0)[ set mem8 2 ]
    ;;[ if(random 3 = 0)[set mem8 mem8 + 1 ]]
  ]
  
  ;; if there are more then 2 ennemies, we build a rocket launchers
  if((count perceive-robots ennemy > 2) and energy > 20000 )
  [
    set mem7 mem7 + 1
  ]
  
  if(mem10 != 0 and energy > 20000)
  [
     set mem7 mem7 + 2
  ]
  
  ;; if enemy's rocketlaunchers near our base, we shoot a faf
  let t one-of perceive-specific-robots ennemy rocketlaunchers
  if (t != nobody) [
    ;;show 33333
    ;; regarde s'il y a des robots amis en direction de la cible potentielle t avant de tirer
    if (not any? perceive-robots-in-cone color towards t) [ launch-faf t ]
  ]
  
  ;; if any enemy near our base, we shoot a regular bullet
  let k one-of perceive-robots ennemy
  if (k != nobody ) [
    
    if (not any? perceive-robots-in-cone color towards k) [ launch-rocket towardsxy ([xcor] of k)  ([ycor] of k)]
  ]
  
  ;; if the nearest robot know the cor of enemy's base, we note it
 
  
  ;; if we know the enemy's base and we have enough energy, we build a lot rocket launchers
 
  
  let my-robot perceive-robots color
  if(my-robot != nobody )
  [
    if(mem10 = 1)
    [
     
        bilibili-give-data my-robot mem3 3
        
    ]
    
    if(mem10 = 2 and ([mem5] of my-robot != 3))
    [
      bilibili-give-data my-robot mem3 3
      bilibili-give-data my-robot mem4 4
      
      bilibili-give-data my-robot 2 2
    ]
  ]
 
  

  
end

;; procedure pour initialiser les explorers rouges
to initRedExplorer
end

;; procedure pour initialiser les rocket-launchers rouges
to initRedRocketLauncher
end

;; procedure pour initialiser les rocket-launchers rouges
to initRedHarvester
  ;;plant-seeds color max-seeds
end

;; procedure pour initialiser les bases rouges
to initRedBase
  ;;new-Harvester self
  ;;set mem7 2
  set mem6 7
  set mem8 2
end
